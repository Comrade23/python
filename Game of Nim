'''
Contributors: Ryan M., Clayton S.
 Class: CSC-119-001
 Date: 06/26/2019
 ——————————————————————————————————-
 Description: 
 ’’’

 
  def main(): - driver of the program		 def main():
 Setup the game: number of balls to start (random), mode of computer (random dumb or smart), who goes first (random computer or player)		
  play the game after the setup until either the player wins or the computer wins.		   ’’’
   Import Random int function
   from random import randint
   ’’’ 

    # Determine turn (computer or player)

    ’’’
   Setup the game: number of balls to start (random), mode of computer (random dumb or smart), who goes first (random computer or player)
   play the game after the setup until either the player wins or the computer wins.
   ’’’

 
  def computerDumbMode(ballCount):		 def computerDumbMode(ballCount):

 
    #Determine how many balls to start

    for computerDumbModeBallCount in range( 3 ) :
     computerDumbModeBallCount = randint( 10 , 100 )

    print( 'Computer Ball Count: ' , int( computerDumbModeBallCount ) )

  def computerSmartMode(ballCount):		 def computerSmartMode(ballCount):

    for computerDumbModeBallCount in range( 3 ) :
     computerDumbModeBallCount = randint( 10 , 100 )

    print( 'Computer Ball Count: ' , int( computerDumbModeBallCount ) ) 

 
 
 
  def playerTurn(ballCount):		 def playerTurn(ballCount):

 
  Design the Game of Nim based upon the specifications given. Any design style may be utilized. Save the file as NimDesign		   for playerTurnBallCount in range( 3 ) :
 Use step-wise refinement on the design and separate out tasks into different modules (functions)		     playerTurnBallCount = randint( 10 , 100 )
 Implement the Game of Nim based upon your design that solves the problem. Name the file NimApp.py		
  You must implement the project using functions as designed above		   print( 'Player Ball Count: ' ,'%4d' % int( playerTurnBallCount ) )

  def computer mode (dumb or smart):

    # Determine computer mode (dumb or smart)
